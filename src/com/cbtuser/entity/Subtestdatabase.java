package com.cbtuser.entity;
// Generated Nov 11, 2019 11:56:01 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Subtestdatabase generated by hbm2java
 */
@Entity
@Table(name="subtestdatabase"
    ,catalog="computerbasedtest"
)
public class Subtestdatabase  implements java.io.Serializable {


     private String id;
     private Questionmaker questionmaker;
     private String name;
     private Set<Videoquestion> videoquestions = new HashSet<Videoquestion>(0);
     private Set<Audioquestion> audioquestions = new HashSet<Audioquestion>(0);
     private Set<Normalquestion> normalquestions = new HashSet<Normalquestion>(0);
     private Set<Imagequestion> imagequestions = new HashSet<Imagequestion>(0);
     private Set<Subtest> subtests = new HashSet<Subtest>(0);

    public Subtestdatabase() {
    }

	
    public Subtestdatabase(String id, Questionmaker questionmaker, String name) {
        this.id = id;
        this.questionmaker = questionmaker;
        this.name = name;
    }
    public Subtestdatabase(String id, Questionmaker questionmaker, String name, Set<Videoquestion> videoquestions, Set<Audioquestion> audioquestions, Set<Normalquestion> normalquestions, Set<Imagequestion> imagequestions, Set<Subtest> subtests) {
       this.id = id;
       this.questionmaker = questionmaker;
       this.name = name;
       this.videoquestions = videoquestions;
       this.audioquestions = audioquestions;
       this.normalquestions = normalquestions;
       this.imagequestions = imagequestions;
       this.subtests = subtests;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false, length=8)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="QuestionMaker_id", nullable=false)
    public Questionmaker getQuestionmaker() {
        return this.questionmaker;
    }
    
    public void setQuestionmaker(Questionmaker questionmaker) {
        this.questionmaker = questionmaker;
    }

    
    @Column(name="name", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subtestdatabase")
    public Set<Videoquestion> getVideoquestions() {
        return this.videoquestions;
    }
    
    public void setVideoquestions(Set<Videoquestion> videoquestions) {
        this.videoquestions = videoquestions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subtestdatabase")
    public Set<Audioquestion> getAudioquestions() {
        return this.audioquestions;
    }
    
    public void setAudioquestions(Set<Audioquestion> audioquestions) {
        this.audioquestions = audioquestions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subtestdatabase")
    public Set<Normalquestion> getNormalquestions() {
        return this.normalquestions;
    }
    
    public void setNormalquestions(Set<Normalquestion> normalquestions) {
        this.normalquestions = normalquestions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subtestdatabase")
    public Set<Imagequestion> getImagequestions() {
        return this.imagequestions;
    }
    
    public void setImagequestions(Set<Imagequestion> imagequestions) {
        this.imagequestions = imagequestions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subtestdatabase")
    public Set<Subtest> getSubtests() {
        return this.subtests;
    }
    
    public void setSubtests(Set<Subtest> subtests) {
        this.subtests = subtests;
    }




}


