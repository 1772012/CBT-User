package com.cbtuser.entity;
// Generated Oct 19, 2019 10:48:39 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Normalquestion generated by hbm2java
 */
@Entity
@Table(name="normalquestion"
    ,catalog="computerbasedtest"
)
public class Normalquestion  implements java.io.Serializable {


     private NormalquestionId id;
     private Questiondb questiondb;
     private Subtest subtest;
     private String content;
     private String trueAnswer;
     private Set<Nrmansquestion> nrmansquestions = new HashSet<Nrmansquestion>(0);

    public Normalquestion() {
    }

	
    public Normalquestion(NormalquestionId id, Questiondb questiondb, Subtest subtest, String content, String trueAnswer) {
        this.id = id;
        this.questiondb = questiondb;
        this.subtest = subtest;
        this.content = content;
        this.trueAnswer = trueAnswer;
    }
    public Normalquestion(NormalquestionId id, Questiondb questiondb, Subtest subtest, String content, String trueAnswer, Set<Nrmansquestion> nrmansquestions) {
       this.id = id;
       this.questiondb = questiondb;
       this.subtest = subtest;
       this.content = content;
       this.trueAnswer = trueAnswer;
       this.nrmansquestions = nrmansquestions;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="id", nullable=false) ), 
        @AttributeOverride(name="questionDbId", column=@Column(name="QuestionDB_id", nullable=false, length=10) ), 
        @AttributeOverride(name="subTestId", column=@Column(name="SubTest_id", nullable=false, length=10) ) } )
    public NormalquestionId getId() {
        return this.id;
    }
    
    public void setId(NormalquestionId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="QuestionDB_id", nullable=false, insertable=false, updatable=false)
    public Questiondb getQuestiondb() {
        return this.questiondb;
    }
    
    public void setQuestiondb(Questiondb questiondb) {
        this.questiondb = questiondb;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SubTest_id", nullable=false, insertable=false, updatable=false)
    public Subtest getSubtest() {
        return this.subtest;
    }
    
    public void setSubtest(Subtest subtest) {
        this.subtest = subtest;
    }

    
    @Column(name="content", nullable=false, length=500)
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }

    
    @Column(name="true_answer", nullable=false, length=500)
    public String getTrueAnswer() {
        return this.trueAnswer;
    }
    
    public void setTrueAnswer(String trueAnswer) {
        this.trueAnswer = trueAnswer;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="normalquestion")
    public Set<Nrmansquestion> getNrmansquestions() {
        return this.nrmansquestions;
    }
    
    public void setNrmansquestions(Set<Nrmansquestion> nrmansquestions) {
        this.nrmansquestions = nrmansquestions;
    }




}


