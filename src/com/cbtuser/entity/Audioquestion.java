package com.cbtuser.entity;
// Generated Nov 8, 2019 8:58:55 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Audioquestion generated by hbm2java
 */
@Entity
@Table(name="audioquestion"
    ,catalog="computerbasedtest"
    , uniqueConstraints = @UniqueConstraint(columnNames="id") 
)
public class Audioquestion  implements java.io.Serializable {


     private AudioquestionId id;
     private Subtestdatabase subtestdatabase;
     private byte[] audio;
     private String content;
     private Set<Audansquestion> audansquestions = new HashSet<Audansquestion>(0);

    public Audioquestion() {
    }

	
    public Audioquestion(AudioquestionId id, Subtestdatabase subtestdatabase, byte[] audio, String content) {
        this.id = id;
        this.subtestdatabase = subtestdatabase;
        this.audio = audio;
        this.content = content;
    }
    public Audioquestion(AudioquestionId id, Subtestdatabase subtestdatabase, byte[] audio, String content, Set<Audansquestion> audansquestions) {
       this.id = id;
       this.subtestdatabase = subtestdatabase;
       this.audio = audio;
       this.content = content;
       this.audansquestions = audansquestions;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="id", unique=true, nullable=false, length=10) ), 
        @AttributeOverride(name="subTestDatabaseId", column=@Column(name="SubTestDatabase_id", nullable=false, length=8) ) } )
    public AudioquestionId getId() {
        return this.id;
    }
    
    public void setId(AudioquestionId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SubTestDatabase_id", nullable=false, insertable=false, updatable=false)
    public Subtestdatabase getSubtestdatabase() {
        return this.subtestdatabase;
    }
    
    public void setSubtestdatabase(Subtestdatabase subtestdatabase) {
        this.subtestdatabase = subtestdatabase;
    }

    
    @Column(name="audio", nullable=false)
    public byte[] getAudio() {
        return this.audio;
    }
    
    public void setAudio(byte[] audio) {
        this.audio = audio;
    }

    
    @Column(name="content", nullable=false, length=500)
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="audioquestion")
    public Set<Audansquestion> getAudansquestions() {
        return this.audansquestions;
    }
    
    public void setAudansquestions(Set<Audansquestion> audansquestions) {
        this.audansquestions = audansquestions;
    }




}


