package com.cbtuser.entity;
// Generated Nov 15, 2019 8:43:31 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name="question"
    ,catalog="computerbasedtest"
    , uniqueConstraints = @UniqueConstraint(columnNames="id") 
)
public class Question  implements java.io.Serializable {


     private QuestionId id;
     private Subtestdatabase subtestdatabase;
     private String content;
     private Set<Answer> answers = new HashSet<Answer>(0);
     private Set<Mediacontent> mediacontents = new HashSet<Mediacontent>(0);

    public Question() {
    }

	
    public Question(QuestionId id, Subtestdatabase subtestdatabase, String content) {
        this.id = id;
        this.subtestdatabase = subtestdatabase;
        this.content = content;
    }
    public Question(QuestionId id, Subtestdatabase subtestdatabase, String content, Set<Answer> answers, Set<Mediacontent> mediacontents) {
       this.id = id;
       this.subtestdatabase = subtestdatabase;
       this.content = content;
       this.answers = answers;
       this.mediacontents = mediacontents;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="id", unique=true, nullable=false, length=12) ), 
        @AttributeOverride(name="subTestDatabaseId", column=@Column(name="SubTestDatabase_id", nullable=false, length=8) ) } )
    public QuestionId getId() {
        return this.id;
    }
    
    public void setId(QuestionId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SubTestDatabase_id", nullable=false, insertable=false, updatable=false)
    public Subtestdatabase getSubtestdatabase() {
        return this.subtestdatabase;
    }
    
    public void setSubtestdatabase(Subtestdatabase subtestdatabase) {
        this.subtestdatabase = subtestdatabase;
    }

    
    @Column(name="content", nullable=false, length=45)
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="question")
    public Set<Answer> getAnswers() {
        return this.answers;
    }
    
    public void setAnswers(Set<Answer> answers) {
        this.answers = answers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="question")
    public Set<Mediacontent> getMediacontents() {
        return this.mediacontents;
    }
    
    public void setMediacontents(Set<Mediacontent> mediacontents) {
        this.mediacontents = mediacontents;
    }




}


