package com.cbtuser.entity;
// Generated Nov 8, 2019 8:58:55 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Videoquestion generated by hbm2java
 */
@Entity
@Table(name="videoquestion"
    ,catalog="computerbasedtest"
)
public class Videoquestion  implements java.io.Serializable {


     private VideoquestionId id;
     private Subtestdatabase subtestdatabase;
     private byte[] video;
     private String content;
     private Set<Vidansquestion> vidansquestions = new HashSet<Vidansquestion>(0);

    public Videoquestion() {
    }

	
    public Videoquestion(VideoquestionId id, Subtestdatabase subtestdatabase, byte[] video, String content) {
        this.id = id;
        this.subtestdatabase = subtestdatabase;
        this.video = video;
        this.content = content;
    }
    public Videoquestion(VideoquestionId id, Subtestdatabase subtestdatabase, byte[] video, String content, Set<Vidansquestion> vidansquestions) {
       this.id = id;
       this.subtestdatabase = subtestdatabase;
       this.video = video;
       this.content = content;
       this.vidansquestions = vidansquestions;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="id", nullable=false, length=10) ), 
        @AttributeOverride(name="subTestDatabaseId", column=@Column(name="SubTestDatabase_id", nullable=false, length=8) ) } )
    public VideoquestionId getId() {
        return this.id;
    }
    
    public void setId(VideoquestionId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SubTestDatabase_id", nullable=false, insertable=false, updatable=false)
    public Subtestdatabase getSubtestdatabase() {
        return this.subtestdatabase;
    }
    
    public void setSubtestdatabase(Subtestdatabase subtestdatabase) {
        this.subtestdatabase = subtestdatabase;
    }

    
    @Column(name="video", nullable=false)
    public byte[] getVideo() {
        return this.video;
    }
    
    public void setVideo(byte[] video) {
        this.video = video;
    }

    
    @Column(name="content", nullable=false, length=500)
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="videoquestion")
    public Set<Vidansquestion> getVidansquestions() {
        return this.vidansquestions;
    }
    
    public void setVidansquestions(Set<Vidansquestion> vidansquestions) {
        this.vidansquestions = vidansquestions;
    }




}


